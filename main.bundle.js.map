{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/spcx-rest.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","<!--The content below is only a placeholder and can be replaced.-->\n<div style=\"text-align:center\">\n  <h1>\n   Test {{ title }}!\n  </h1>\n<span>Created: {{createDate | date}} ,   Modified: {{modDate | date}}</span>\n <h4>Click link below for each map</h4>\n\n    <table  border=\"1\" align=\"center\" style=\"background-color:wheat\">\n      <tr>\n        <th>ID</th>\n        <th>Feature Map</th>\n      </tr>\n      <tr  *ngFor=\"let feature of features; let i = index\">\n        <td> {{i}}</td>\n        <td><a [href]=\"feature.id\" target=\"new\">{{feature.category}} {{feature.count}}</a></td>\n      </tr>\n\n    </table>\n\n  \n\n\n\n\n\n </div>\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.html","import { Component } from '@angular/core';\nimport { SpcxRestService} from './spcx-rest.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'app';\n  entireObj: any;\n  createDate: Date;\n  modDate: Date;\n  features: any[] = [];\n    constructor(\n      private appSettingsService : SpcxRestService \n  ) { }\n\n  ngOnInit(){\n    this.appSettingsService.getJSON().subscribe(data => {\n          console.log(\"data=\",data);\n          this.entireObj = data;\n          //label something on the page\n          this. title = data.label;\n          this.createDate = data['dcmi:created'];\n          this.modDate = data['dcmi:modified'];\n          //list out all the features inside json object\n          for(let result of data.features){\n            this.features.push(result);\n         }\n\n         console.log(\"this.mylist=\",this.features);\n\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'; \n\nimport { AppComponent } from './app.component';\nimport { SpcxRestService} from './spcx-rest.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [SpcxRestService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class SpcxRestService {\n\n  constructor(private http: HttpClient) {\n      this.getJSON().subscribe(data => {\n          console.log(data)\n      });\n  }\n\n  public getJSON(): Observable<any> {\n    \n    return this.http.get(\"https://opencontext.org/subjects-search/Turkey/Kenan+Tepe.json\")\n    //return this.http.get(\"./assets/test.json\");\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/spcx-rest.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}